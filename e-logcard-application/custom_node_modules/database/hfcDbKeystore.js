//database hfc keystore
let mongoDb=require("./mongo.js");
const nodeUtil = require('util');

const collectionName="keystores";
class HfcMongoKeystore{
	
	
	setValue(user, value, cb) {  
		var self=this;
		let keystoreCollection = self.getCollection();
		//on recupere le keystore si il existe
		self.findKeystore(user,function(error,result){
			if(error){
				console.log("eerrrror "+name);
				throw error;
			}
			else if(result==null){
				var keystore={"user":user,"keystore":value};	
				keystoreCollection.insert(keystore, null, function (error, results) { 
					if (error) throw error;
					console.log("Le keystore a bien ete ajoute pour l utilisateur "+user);    
					console.log("keeeeeeeeeystore "+ value);
					cb(null);
				});	
			}
			else{
				result.keystore=value;
				keystoreCollection.update({"user":user},result, function (error, results) { 
					if (error) throw error;
					console.log("Le keystore a bien ete mis a jour pour l utilisateur "+user);    
					cb(null);
				});
			}
		});
		
	}
	
	getValue(user, cb) {
		var self=this;
		let keystoreCollection = self.getCollection();
		let keystoreRequest={"user":user};	
		console.log("Recherche du keystore pour le user "+user+" "+keystoreRequest);
		self.findKeystore(user,function(error,result){
			if(error){
				console.log("eerrrror "+name);
				throw error;
			}
			else if(result==null){
				return cb(null,null);
			}
			return cb(null,result.keystore);
		});
		 
	}
	
	findKeystore(user,cb){
		var self=this;
		let keystoreCollection = self.getCollection();
		let keystoreRequest={"user":user};	
		console.log("Recherche du keystore pour le user "+user);
		keystoreCollection.find(keystoreRequest).toArray(function(error,results){
			if(error){
				console.log("error for  keystore recovering user => "+name);
				cb(error,null);
			}
			else if(results.length==0){
				 console.log("No keystore for user "+user);
				 cb(null, null);
			}
			else if(results.length>1){
				 console.log("More than one keystore found for user "+name);
				 cb("More than one keystore found for user "+name, null);
			}
			else{
				cb(null, results[0]);
			}
			
		});
	}
	
	
	getCollection(){
		return mongoDb.database.collection(collectionName);
	}
	
	
	
	
}

exports.newHfcDbKeystore=function(){
	return new HfcMongoKeystore();
};