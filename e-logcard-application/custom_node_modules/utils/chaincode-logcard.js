'use strict';


const Util = require('./hfcUtil.js');
const nodeUtil = require('util');


// Parts 

	// Query 
	exports.getAllPartsDetails = function (user) {
	    return Util.queryChaincode(user, 'getAllPartsDetails', []);
	};
	exports.getPartDetails = function (user, id) {
	    return Util.queryChaincode(user, 'getPartDetails', [id]);
	};
		exports.getAllPartsWithoutAssembly = function (user) {
	    return Util.queryChaincode(user, 'getAllPartsWithoutAssembly', []);
	};
		exports.getAllPartsWithoutAircraft = function (user) {
	    return Util.queryChaincode(user, 'getAllPartsWithoutAircraft', []);
	};
	// Invoke 
	exports.createPart=function(user,part) {
		// generer un UIId
		return Util.invokeChaincode(user, 'createPart', [part.pn, part.sn, part.id, part.partName, part.type, part.owner, part.responsible, part.helicopter, part.assembly, part.vDate ]);
	};	
	exports.ownershipTransfer=function(user, id, owner, vDate) {
		return Util.invokeChaincode(user, 'ownershipTransfer', [ id, owner, vDate ]);
	};
	exports.responsibilityTransfer=function(user, id, responsible, vDate) {
		return Util.invokeChaincode(user, 'responsibilityTransfer', [ id, responsible, vDate ]);
	};
	exports.performActivities=function(user, id, modType, description, vDate) {
		return Util.invokeChaincode(user, 'performActivities', [ id, modType, description, vDate ]);
	};
	exports.scrappPart=function(user, id, vDate) {
		return Util.invokeChaincode(user, 'scrappPart', [ id, vDate ]);
	};



// Assembly

// Invoke	
	exports.createAssembly=function(user,assembly) {
		// generer un UIId
		return Util.invokeChaincode(user, 'createAssembly', [assembly.an, assembly.sn, assembly.id, assembly.componentName, assembly.owner, assembly.responsible, assembly.vDate ]);
	};
	exports.addPartToAssemb=function(user,id, idpart, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'addPartToAssemb', [id, idpart, vDate]);
	};
	exports.AssembOwnershipTransfer=function(user, id, owner, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'AssembOwnershipTransfer', [id, owner, vDate]);
	};
	
	exports.AssembRespoTransfer=function(user, id, responsible, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'AssembRespoTransfer', [id, responsible, vDate]);
	};

	exports.RemovePartFromAs=function(user,id, idpart, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'RemovePartFromAs', [id, idpart, vDate]);
	};
	
	exports.ReplacePartOnAssembly=function(user,id, idpart, idpart1, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'ReplacePartOnAssembly', [id, idpart, idpart1, vDate]);
	};
	exports.scrappAssembly=function(user, id, vDate) {
		return Util.invokeChaincode(user, 'scrappAssembly', [ id, vDate ]);
	};
	
// Query 
	exports.getAssembDetails = function (user, id) {
	    return Util.queryChaincode(user, 'getAssembDetails', [id]);
	};
	exports.AssembPartsListing = function (user, id) {
	    return Util.queryChaincode(user, 'AssembPartsListing', [id]);
	};
	exports.getAllAssembliesDetails = function (user) {
	    return Util.queryChaincode(user, 'getAllAssembliesDetails', []);
	};
		exports.getAllAssembliesWithoutAC = function (user) {
	    return Util.queryChaincode(user, 'getAllAssembliesWithoutAC', []);
	};
	
// Aircrafts 
	
// Invoke 
	exports.createAircraft=function(user,aircraft) {
		// generer un UIId
		return Util.invokeChaincode(user, 'createAircraft', [aircraft.an, aircraft.sn, aircraft.id, aircraft.componentName, aircraft.owner, aircraft.responsible, aircraft.vDate ]);
	};
	exports.addPartToAc=function(user,id, idpart, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'addPartToAc', [id, idpart, vDate]);
	};
	exports.AcOwnershipTransfer=function(user, id, owner, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'AcOwnershipTransfer', [id, owner, vDate]);
	};
	
	exports.AcRespoTransfer=function(user, id, responsible, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'AcRespoTransfer', [id, responsible, vDate]);
	};
	exports.RemovePartFromAc=function(user,id, idpart, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'RemovePartFromAc', [id, idpart, vDate]);
	};
	
	exports.ReplacePartOnAircraft=function(user,id, idpart, idpart1, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'ReplacePartOnAircraft', [id, idpart, idpart1, vDate]);
	};
	exports.AddAssemblyToAc=function(user,id, idassembly, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'AddAssemblyToAc', [id, idassembly, vDate]);
	};
	exports.RemoveAssemblyFromAc=function(user,id, idassembly, vDate) {
		// generer un UIId
		return Util.invokeChaincode(user, 'RemoveAssemblyFromAc', [id, idassembly, vDate]);
	};
	exports.scrappAircraft=function(user, id, vDate) {
		return Util.invokeChaincode(user, 'scrappAircraft', [ id, vDate ]);
	};

	exports.replaceAssemblyOnAC=function(user, id, idassembly, idassembly1, vDate) {
		return Util.invokeChaincode(user, 'replaceAssemblyOnAC', [ id, idassembly, idassembly1, vDate ]);
	};
		
// Query 
	exports.getAcDetails = function (user, id) {
	    return Util.queryChaincode(user, 'getAcDetails', [id]);
	};
	exports.AcPartsListing = function (user, id) {
	    return Util.queryChaincode(user, 'AcPartsListing', [id]);
	};
	
	exports.AcAssembliesListing = function (user, id) {
	    return Util.queryChaincode(user, 'AcAssembliesListing', [id]);
	};
	exports.getAllAircraftsDetails = function (user) {
	    return Util.queryChaincode(user, 'getAllAircraftsDetails', []);
	};


	
	