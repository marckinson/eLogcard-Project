'use strict';


const Util = require('./hfcUtil.js');
const nodeUtil = require('util');


// Parts 

	// Query 
	exports.getAllPartsDetails = function (user) {
	    return Util.queryChaincode(user, 'getAllPartsDetails', []);
	};
	exports.getPartDetails = function (user, id) {
	    return Util.queryChaincode(user, 'getPartDetails', [id]);
	};
	// Invoke 
	exports.createPart=function(user,part) {
		// generer un UIId
		return Util.invokeChaincode(user, 'createPart', [part.pn, part.sn, part.id, part.partName, part.type, part.owner, part.responsible, part.helicopter, part.assembly, part.vDate ]);
	};	
	exports.ownershipTransfer=function(user, id, owner, vDate) {
		return Util.invokeChaincode(user, 'ownershipTransfer', [ id, owner, vDate ]);
	};
	exports.responsibilityTransfer=function(user, id, responsible, vDate) {
		return Util.invokeChaincode(user, 'responsibilityTransfer', [ id, responsible, vDate ]);
	};
	exports.performActivities=function(user, id, modType, description, vDate) {
		return Util.invokeChaincode(user, 'performActivities', [ id, modType, description, vDate ]);
	};

// Assembly

	// Invoke	
	exports.createAssembly=function(user,aircraft) {
		// generer un UIId
		return Util.invokeChaincode(user, 'createAssembly', [aircraft.an, aircraft.sn, aircraft.id, aircraft.owner, aircraft.vDate ]);
	};
	exports.addPartToAssemb=function(user,id, idpart) {
		// generer un UIId
		return Util.invokeChaincode(user, 'addPartToAssemb', [id, idpart]);
	};
	exports.AssembOwnershipTransfer=function(user, id, owner) {
		// generer un UIId
		return Util.invokeChaincode(user, 'AssembOwnershipTransfer', [id, owner]);
	};

	exports.RemovePartFromAs=function(user,id, idpart) {
		// generer un UIId
		return Util.invokeChaincode(user, 'RemovePartFromAs', [id, idpart]);
	};
	
	// Query 
	exports.getAssembDetails = function (user, id) {
	    return Util.queryChaincode(user, 'getAssembDetails', [id]);
	};
	exports.AssembPartsListing = function (user, id) {
	    return Util.queryChaincode(user, 'AssembPartsListing', [id]);
	};
	exports.getAllAssembliesDetails = function (user) {
	    return Util.queryChaincode(user, 'getAllAssembliesDetails', []);
	};
	
	
// Aircrafts 
	
	// Invoke 
	exports.createAircraft=function(user,aircraft) {
		// generer un UIId
		return Util.invokeChaincode(user, 'createAircraft', [aircraft.an, aircraft.sn, aircraft.id, aircraft.owner, aircraft.vDate ]);
	};
	exports.addPartToAc=function(user,id, idpart) {
		// generer un UIId
		return Util.invokeChaincode(user, 'addPartToAc', [id, idpart]);
	};
	exports.AcOwnershipTransfer=function(user, id, owner) {
		// generer un UIId
		return Util.invokeChaincode(user, 'AcOwnershipTransfer', [id, owner]);
	};
	exports.RemovePartFromAc=function(user,id, idpart) {
		// generer un UIId
		return Util.invokeChaincode(user, 'RemovePartFromAc', [id, idpart]);
	};
	
	// Query 
	exports.getAcDetails = function (user, id) {
	    return Util.queryChaincode(user, 'getAcDetails', [id]);
	};
	exports.AcPartsListing = function (user, id) {
	    return Util.queryChaincode(user, 'AcPartsListing', [id]);
	};
	exports.getAllAircraftsDetails = function (user) {
	    return Util.queryChaincode(user, 'getAllAircraftsDetails', []);
	};

// Assets 

exports.getAssets = function (user, typ) {
	    return Util.queryChaincode(user, 'getAssets', [typ]);
	};
	
exports.getRolesList = function (user) {
	    return Util.queryChaincode(user, 'getRolesList', []);
	};
exports.getActionsList = function (user) {
	    return Util.queryChaincode(user, 'getActionsList', []);
	};
exports.getAircraftTypesList = function (user) {
	    return Util.queryChaincode(user, 'getAircraftTypesList', []);
	};
exports.getAircraftsList = function (user) {
	    return Util.queryChaincode(user, 'getAircraftsList', []);
	};
exports.getAssembliesList = function (user) {
	    return Util.queryChaincode(user, 'getAssembliesList', []);
	};
exports.getPartsList = function (user) {
	    return Util.queryChaincode(user, 'getPartsList', []);
	};
exports.getLogsList = function (user) {
	    return Util.queryChaincode(user, 'getLogsList', []);
	};
	
	